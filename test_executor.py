#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ุงุฎุชุจุงุฑ ูููุฐ ุงูููุฏ ูุน ุงููุต ุงูุนุฑุจู
Test code executor with Arabic text
"""

import asyncio
import sys
import os

# ุฅุถุงูุฉ ุงููุณุงุฑ ุงูุญุงูู ูู Python path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from core.executor import CodeExecutor

async def test_arabic_execution():
    """ุงุฎุชุจุงุฑ ุชูููุฐ ุงูููุฏ ุงูุนุฑุจู"""
    
    print("๐งช ุงุฎุชุจุงุฑ ูููุฐ ุงูููุฏ ูุน ุงููุต ุงูุนุฑุจู")
    print("=" * 50)
    
    executor = CodeExecutor()
    
    # ุงุฎุชุจุงุฑ 1: ูุต ุนุฑุจู ุจุณูุท
    print("\n๐ ุงุฎุชุจุงุฑ 1: ุทุจุงุนุฉ ูุต ุนุฑุจู ุจุณูุท")
    code1 = "print('ูุฑุญุจุงู ุจู ูู AION!')"
    result1 = await executor.execute_code(code1, "python")
    
    print(f"โ ูุฌุญ: {result1.success}")
    if result1.success:
        print(f"๐ค ุงููุฎุฑุฌุงุช: {result1.output}")
    else:
        print(f"โ ุฎุทุฃ: {result1.error}")
    
    # ุงุฎุชุจุงุฑ 2: ูุต ุนุฑุจู ูุน ุฑููุฒ ุชุนุจูุฑูุฉ
    print("\n๐ ุงุฎุชุจุงุฑ 2: ูุต ุนุฑุจู ูุน ุฑููุฒ ุชุนุจูุฑูุฉ")
    code2 = "print('๐ค ูุธุงู AION ุฌุงูุฒ ููุนูู! โ')"
    result2 = await executor.execute_code(code2, "python")
    
    print(f"โ ูุฌุญ: {result2.success}")
    if result2.success:
        print(f"๐ค ุงููุฎุฑุฌุงุช: {result2.output}")
    else:
        print(f"โ ุฎุทุฃ: {result2.error}")
    
    # ุงุฎุชุจุงุฑ 3: ุนูููุงุช ุญุณุงุจูุฉ ูุน ูุต ุนุฑุจู
    print("\n๐ ุงุฎุชุจุงุฑ 3: ุนูููุงุช ุญุณุงุจูุฉ ูุน ูุต ุนุฑุจู")
    code3 = """
import math
pi = math.pi
print(f'ูููุฉ ฯ = {pi:.4f}')
print(f'ุงูุฌุฐุฑ ุงูุชุฑุจูุนู ูู 16 = {math.sqrt(16)}')
print('ุชู ุฅูุฌุงุฒ ุงูุนูููุงุช ุงูุญุณุงุจูุฉ ุจูุฌุงุญ! ๐ฏ')
"""
    result3 = await executor.execute_code(code3, "python")
    
    print(f"โ ูุฌุญ: {result3.success}")
    if result3.success:
        print(f"๐ค ุงููุฎุฑุฌุงุช: {result3.output}")
    else:
        print(f"โ ุฎุทุฃ: {result3.error}")
    
    # ุงุฎุชุจุงุฑ 4: ูุงุฆูุฉ ุจุงููุบุฉ ุงูุนุฑุจูุฉ
    print("\n๐ ุงุฎุชุจุงุฑ 4: ูุงุฆูุฉ ุจุงููุบุฉ ุงูุนุฑุจูุฉ")
    code4 = """
languages = ['ุงูุนุฑุจูุฉ', 'ุงูุฅูุฌููุฒูุฉ', 'ุงููุฑูุณูุฉ', 'ุงูุฃููุงููุฉ']
print('ุงููุบุงุช ุงููุฏุนููุฉ ูู AION:')
for i, lang in enumerate(languages, 1):
    print(f'{i}. {lang}')
print('๐ ุฏุนู ูุชุนุฏุฏ ุงููุบุงุช!')
"""
    result4 = await executor.execute_code(code4, "python")
    
    print(f"โ ูุฌุญ: {result4.success}")
    if result4.success:
        print(f"๐ค ุงููุฎุฑุฌุงุช: {result4.output}")
    else:
        print(f"โ ุฎุทุฃ: {result4.error}")
    
    print("\n" + "=" * 50)
    print("๐ ุงูุชูู ุงุฎุชุจุงุฑ ูููุฐ ุงูููุฏ")

if __name__ == "__main__":
    asyncio.run(test_arabic_execution())
