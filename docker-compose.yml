version: '3.8'

services:
  aion:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: aion-app
    ports:
      - "8000:8000"
      - "8080:8080"
    environment:
      - AION_ENV=production
      - PYTHONPATH=/app
    volumes:
      - aion_data:/home/aion/.aion
      - ./config:/app/config:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - aion-network

  aion-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: aion-dev
    ports:
      - "8001:8000"
      - "8081:8080"
    environment:
      - AION_ENV=development
      - PYTHONPATH=/app
    volumes:
      - .:/app
      - aion_dev_data:/home/aion/.aion
    stdin_open: true
    tty: true
    networks:
      - aion-network
    profiles:
      - dev

  redis:
    image: redis:7-alpine
    container_name: aion-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - aion-network
    profiles:
      - full

  nginx:
    image: nginx:alpine
    container_name: aion-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - aion
    restart: unless-stopped
    networks:
      - aion-network
    profiles:
      - production

volumes:
  aion_data:
    driver: local
  aion_dev_data:
    driver: local
  redis_data:
    driver: local

networks:
  aion-network:
    driver: bridge
